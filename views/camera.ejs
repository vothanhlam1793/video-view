<html>

<head>

    <title>KALA - CAMERA</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="/static/bootstrap.css">

    <!-- jQuery library -->
    <script src="/static/jquery.min.js"></script>

    <!-- Popper JS -->
    <script src="/static/popper.js"></script>

    <!-- Latest compiled JavaScript -->
    <script src="/static/bootstrap.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <script src="/static/hls.min.js"></script>
    <style>
        video {
            width: 100%;
            height: auto;
        }
    </style>
</head>

<body>
    <div class="container" id="app">
        <div>KALA CAMERA</div>
        <div v-for="u in uris" style="padding: 20px;">
            <video :id="u.id" controls>

            </video>
            <div style="padding: 5px;">
                <button class="btn btn-primary" v-on:click="start_video(u.id, u.url)">Start</button> | <button
                    class="btn btn-warning" v-on:click="stop_video(u.id)" disabled>Stop</button>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        var a_hls = [];

        function video_hls(id_video, url) {
            console.log("START: ", id_video);
            var video = document.getElementById(id_video);
            if (Hls.isSupported()) {
                var ah = a_hls.filter((e) => {
                    return e.id == id_video
                })
                var oh;
                if (ah.length == 1) {
                    oh = ah[0];
                } else {
                    oh = {
                        hls: new Hls(),
                        id: id_video,
                    }

                }

                oh.hls.loadSource(url);
                oh.hls.attachMedia(video);
                oh.hls.on(Hls.Events.MANIFEST_PARSED, function () {
                    video.play();
                });
                if (ah.length == 0) {
                    a_hls.push(oh);
                }
            } else if (video.canPlayType('application/vnd.apple.mpegurl')) {
                video.src = url;
                video.addEventListener('canplay', function () {
                    video.play();
                });
            } else {
                alert("Nothing")
                console.log("Notthing");
            }
        }
        var app = new Vue({
            el: '#app',
            data: {
                message: 'Hello Vue!',
                uris: [],
                choice: "",
                urlss: window.location.origin + "/video?id=camera1"
            },
            mounted: function () {
                /* Khoi tao mot thu gi do */
            },
            created() {
                fetch("http://dev.creta.tech:8888/list").then((res) => {
                    res.json().then((a) => {
                        // console.log(a);
                        this.uris = a;
                        this.uris.forEach((e) => {
                            e.url = "http://dev.creta.tech:8888/stream/" + e.uri.split(
                                "/")[2] + "/index.m3u8";
                        })
                        console.log(this.uris);
                    })
                })
            },
            methods: {
                start_video: video_hls,
                stop_video: function (id_video) {
                    console.log("STOP:", id_video);
                    var ah = a_hls.filter((e) => {
                        return e.id == id_video;
                    })
                    if(ah.length == 1){
                        delete a_hls[a_hls.indexOf(ah)];
                        console.log("Da xoa xong");
                    } else {
                        console.log("Khong co gi!");
                    }
                }
            }

        })
    </script>
</body>

</html>